@model Cosmicdistortion.DataShifter.Models.DBConnection

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DBConnection</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DBConnectionId)

        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control mdl-textfield__input" } })
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mdl-cell mdl-cell--4-col">
                <div class="checkbox mdl-checkbox mdl-js-checkbox mdl-checkbox--floating-label">
                    @Html.EditorFor(model => model.IntegratedSecurity, new { htmlAttributes = new { @class = "mdl-checkbox__input" } })
                    @Html.LabelFor(model => model.IntegratedSecurity, htmlAttributes: new { @class = "mdl-checkbox__label" })
                    @Html.ValidationMessageFor(model => model.IntegratedSecurity, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="mdl-grid">
            <div class="mdl-cell mdl-cell--4-col">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.DataSource, new { htmlAttributes = new { @class = "form-control mdl-textfield__input" } })
                    @Html.LabelFor(model => model.DataSource, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.ValidationMessageFor(model => model.DataSource, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mdl-cell mdl-cell--4-col">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.InitialCatalog, new { htmlAttributes = new { @class = "form-control mdl-textfield__input" } })
                    @Html.LabelFor(model => model.InitialCatalog, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.ValidationMessageFor(model => model.InitialCatalog, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="mdl-grid">

            <div class="mdl-cell mdl-cell--4-col">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control mdl-textfield__input" } })
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mdl-cell mdl-cell--4-col">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control mdl-textfield__input" } })
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "mdl-textfield__label" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
